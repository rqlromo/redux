{"version":3,"sources":["constants.js","components/ShowProducts.js","actions.js","components/AddProducts.js","components/Catalogue.js","components/Cart.js","components/Favourites.js","components/App.js","reducers/listCatalogue.js","reducers/listCart.js","reducers/listFavourites.js","reducers/root.js","serviceWorker.js","index.js","configureStore.js"],"names":["ADD_PRODUCT_TO_CATALOGUE","ADD_PRODUCT_TO_CART","ADD_PRODUCT_TO_FAVOURITES","DELETE_PRODUCT_FROM_CART","DELETE_PRODUCT_FROM_FAVOURITES","ShowProducts","_this","this","console","log","props","react_default","a","createElement","listProducts","map","product","index","key","unit","onClick","addProductToCart","addProductToFavs","Component","connect","state","listCatalogue","dispatch","cartProduct","type","favouriteProduct","AddProducts","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","prod","_addToCatalogue","bind","assertThisInitialized","handleChangeInput","event","preventDefault","addProductToCatalogue","setState","target","value","className","onSubmit","htmlFor","onChange","React","catalogueProduct","Catalogue","components_ShowProducts","components_AddProducts","Cart","listCart","deteleProductFromCart","Favourites","listFav","deteleProductFromFavs","listFavourites","App","components_Catalogue","components_Cart","components_Favourites","initialState","rootReducer","combineReducers","arguments","length","undefined","action","toConsumableArray","concat","id","objectSpread","checkedProduct","find","productFilter","indexOf","spliceado","splice","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faf57697.chunk.js","sourcesContent":["const ADD_PRODUCT_TO_CATALOGUE = 'ADD_PRODUCT_TO_CATALOGUE';\nconst ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\nconst ADD_PRODUCT_TO_FAVOURITES = 'ADD_PRODUCT_TO_FAVOURITES';\nconst DELETE_PRODUCT_FROM_CART = 'DELETE_PRODUCT_FROM_CART';\nconst DELETE_PRODUCT_FROM_FAVOURITES = 'DELETE_PRODUCT_FROM_FAVOURITES';\n\nexport {\n  ADD_PRODUCT_TO_CATALOGUE,\n  ADD_PRODUCT_TO_CART,\n  ADD_PRODUCT_TO_FAVOURITES,\n  DELETE_PRODUCT_FROM_CART,\n  DELETE_PRODUCT_FROM_FAVOURITES,\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProductToCart } from \"../actions\";\nimport { addProductToFavs } from \"../actions\";\n\nclass ShowProducts extends Component {\n\n  // _addToCart(event,product) {\n  //   event.preventDefault();\n  //   this.props.addProductToCart(product);\n  // }\n\n  render() {\n    console.log('this.props',this.props)\n    return (\n      <div>\n        <ul>\n          {this.props.listProducts.map((product, index) => {\n            return <li key={index}>\n              {product.unit}\n              <button onClick={()=> this.props.addProductToCart(product)}>\n                comprar\n              </button>\n              <button onClick={()=> this.props.addProductToFavs(product)}>\n                favoritear\n              </button>\n            </li>;\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\n//tenemos acceso a un props que se llama listProducts\n//el state nos lo devuelve el callback de mapStateToProps (es como el event de los addEventListener)\nfunction mapStateToProps(state) {\n  return {\n    //con state.listCatalogue.listProducts accedemos al estado global, luego tenemos que acceder al estado del reducer que deseeemos y despues a la clave del estado que queramos\n    listProducts: state.listCatalogue.listProducts,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addProductToCart: cartProduct => dispatch(addProductToCart(cartProduct)),\n    addProductToFavs: favouriteProduct => dispatch(addProductToFavs(favouriteProduct)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowProducts);\n","import { \n    ADD_PRODUCT_TO_CATALOGUE ,\n    ADD_PRODUCT_TO_CART,\n    ADD_PRODUCT_TO_FAVOURITES,\n    DELETE_PRODUCT_FROM_CART,\n    DELETE_PRODUCT_FROM_FAVOURITES,\n} from \"./constants\";\n\nexport function addProductToCatalogue(catalogueProduct) {\n  return {\n    type: ADD_PRODUCT_TO_CATALOGUE,\n    catalogueProduct,\n  };\n}\n\nexport function addProductToCart(cartProduct) {\n  return {\n    type: ADD_PRODUCT_TO_CART,\n    cartProduct,\n  };\n}\n\nexport function addProductToFavs(favouriteProduct) {\n  return {\n    type: ADD_PRODUCT_TO_FAVOURITES,\n    favouriteProduct,\n  };\n}\n\nexport function deteleProductFromCart(cartProduct) {\n  return {\n    type: DELETE_PRODUCT_FROM_CART,\n    cartProduct,\n  };\n}\n\nexport function deteleProductFromFavs(favouriteProduct) {\n  return {\n    type: DELETE_PRODUCT_FROM_FAVOURITES,\n    favouriteProduct,\n  };\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProductToCatalogue } from \"../actions\";\nimport \"../stylesheets/Form.css\";\n\nclass AddProducts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prod: \" \"\n    };\n\n    this._addToCatalogue = this._addToCatalogue.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    // this.handleFocusInput = this.handleFocusInput.bind(this);\n    // this.handlePressEnter = this.handlePressEnter.bind(this);\n  }\n\n  _addToCatalogue(event) {\n    event.preventDefault();\n    console.log('this.state',this.state);\n    this.props.addProductToCatalogue(this.state.prod);\n    this.setState({\n      prod: ' ',\n    });\n  }\n\n  handleChangeInput(event) {\n    this.setState({\n      prod: event.target.value\n    });\n  }\n  \n  render() {\n    return (\n      <div>\n        <form className=\"form-container\" onSubmit={this._addToCatalogue}>\n          <label htmlFor=\"\">Introduce un articulo al catalogo</label>\n          <input\n            type=\"text\"\n            value={this.state.prod}\n            onChange={this.handleChangeInput}\n          />\n          <button type=\"submit\">Añadir Producto!</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addProductToCatalogue: catalogueProduct =>\n      dispatch(addProductToCatalogue(catalogueProduct))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddProducts);\n","import React, { Component } from \"react\";\nimport ShowProducts from './ShowProducts';\nimport AddProducts from './AddProducts';\nimport '../stylesheets/Catalogue.css';\n\nclass Catalogue extends Component {\n  render() {\n    return (\n      <div className=\"container-list\">\n        <h3>Catalogue</h3>\n        <div className=\"subcontainer-list\">\n          <ShowProducts/>\n          <AddProducts/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Catalogue;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { deteleProductFromCart } from \"../actions\";\n\nclass Cart extends React.Component {\n  render() {\n    return (\n      <div className=\"container-list\">\n        <h3>Cart</h3>\n\n        <div>\n          <ul>\n            {this.props.listCart.map((product, index) => {\n              console.log('raquel',this.props.listCart)\n              return (\n                <li key={index}>\n                  {product.unit}\n                  <button\n                    onClick={() => this.props.deteleProductFromCart(product)}\n                  >\n                    borrar\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    listCart: state.listCart.listCart\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deteleProductFromCart: cartProduct =>\n      dispatch(deteleProductFromCart(cartProduct))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { deteleProductFromFavs } from \"../actions\";\n\nclass Favourites extends React.Component {\n  render() {\n    return (\n      <div className=\"container-list\">\n        <h3>Favourites</h3>\n\n        <ul>\n          {this.props.listFav.map((product, index) => {\n            return (\n              <li key={index}>\n                {product.unit}\n                <button\n                  onClick={() => this.props.deteleProductFromFavs(product)}\n                >\n                  borrar\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    listFav: state.listFavourites.listFav\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deteleProductFromFavs: favouriteProduct =>\n      dispatch(deteleProductFromFavs(favouriteProduct))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Favourites);\n","import React, { Component } from 'react';\n// import logo from '../logo.svg';\nimport '../App.css';\nimport Catalogue from './Catalogue';\nimport Cart from './Cart';\nimport Favourites from './Favourites';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container-market\">\n        <header>\n          <h1>\n            Fundete la tarjeta\n          </h1>\n        </header>\n        <div className=\"subcontainer-market\">\n          <Catalogue/>\n          <Cart/>\n          <Favourites/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ADD_PRODUCT_TO_CATALOGUE } from \"../constants\";\n\nconst initialState = {\n  listProducts: []\n  // name: '',\n  // avatar: '',\n};\n\n// El método Object.assign() se utiliza para copiar los valores de todas la propiedades enumerables de uno o más objetos fuente a un objeto destino. Retorna el objeto destino.\n// Sintaxis\n// Object.assign(objetivo, ...fuentes)\n//Es equivalente a spread operators\n\nexport default function contentReducer(state = initialState, action) {\n  console.log('state',state)\n  switch (action.type) {\n    case ADD_PRODUCT_TO_CATALOGUE:\n      return {\n  // Con la opcion de spread:\n        listProducts: [...state.listProducts, {\n          unit: action.catalogueProduct,\n          id: state.listProducts.length + 1   \n        }]\n\n  // Con la opcion de concat:\n      // ...state,\n      // listProducts : state.listProducts.concat(\n      // [\n      //   {\n      //     unit: action.catalogueProduct,\n      //     id: state.listProducts.length + 1\n      //   }\n      // ])\n    }\n\n    // return Object.assign({}, state, {\n    //   listProducts: state.listProducts.concat([action.product]),\n    //   name: action.name,\n    //   avatar: action.avatar,\n    // });\n\n    default:\n      return state;\n  }\n}\n","import { ADD_PRODUCT_TO_CART, DELETE_PRODUCT_FROM_CART } from \"../constants\";\n\nconst initialState = {\n  listCart: []\n};\n\nexport default function contentReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PRODUCT_TO_CART:\n      console.log(\"action.cartProduct\", action.cartProduct.id);\n      return {\n        ...state,\n        listCart: state.listCart.concat([action.cartProduct])\n      };\n\n    case DELETE_PRODUCT_FROM_CART:\n      console.log(\"antes de filter\", state.listCart);\n\n      let checkedProduct = state.listCart.find(productFilter => {\n        return productFilter.id === action.cartProduct.id;\n      });\n\n      let index = state.listCart.indexOf(checkedProduct);\n\n      let spliceado = state.listCart.splice(index, 1);\n\n      console.log(\"checkedProduct\", checkedProduct);\n      console.log(\"index\", index);\n      console.log(\"spliceado\", spliceado);\n      console.log(\"state.listCart\", state.listCart);\n\n      return {\n        ...state,\n        listCart: state.listCart.concat([state.listCart])\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_PRODUCT_TO_FAVOURITES,\n  DELETE_PRODUCT_FROM_FAVOURITES,\n} from \"../constants\";\n\nconst initialState = {\n  listFav: []\n};\n\nexport default function contentReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PRODUCT_TO_FAVOURITES:\n      return {\n        ...state,\n        listFav: state.listFav.concat([action.favouriteProduct])\n      };\n\n    // case DELETE_PRODUCT_FROM_FAVOURITES:\n\n    //   let listFavFilter = state.listFav.filter(productFilter => {\n    //     console.log('action.favouriteProduct.id',action.favouriteProduct.id.length);\n    //     return productFilter.id !== action.favouriteProduct.id;\n    //   });\n\n    //   return {\n    //     ...state,\n    //     listFav: listFavFilter\n    //   };\n\n    case DELETE_PRODUCT_FROM_FAVOURITES:\n\n      let checkedProduct = state.listFav.find(productFilter => {\n        return productFilter.id === action.favouriteProduct.id;\n      });\n\n      let index = state.listFav.indexOf(checkedProduct);\n\n      let spliceado = state.listFav.splice(index, 1);\n\n      console.log(\"checkedProduct\", checkedProduct);\n      console.log(\"index\", index);\n      console.log(\"spliceado\", spliceado);\n      console.log(\"state.listFav\", state.listFav);\n\n      return {\n        ...state,\n        listFav: state.listFav.concat([state.listFav])\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport listCatalogue from './listCatalogue';\nimport listCart from './listCart';\nimport listFavourites from './listFavourites';\n\n//genera el store general\nconst rootReducer = combineReducers({\n  listCatalogue,\n  listCart,\n  listFavourites,\n})\n\nexport default rootReducer\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './components/App';\nimport configureStore from './configureStore'\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/root';\n\nimport thunk from 'redux-thunk';\n\nexport default function configureStore() {\n  let store = createStore(rootReducer,\n    applyMiddleware(thunk))\n  return store\n}"],"sourceRoot":""}