{"version":3,"sources":["constants.js","components/ShowProducts.js","actions.js","components/AddProducts.js","components/Catalogue.js","components/Cart.js","components/Favourites.js","components/App.js","reducers/listCatalogue.js","reducers/listCart.js","reducers/listFavourites.js","reducers/root.js","serviceWorker.js","index.js","configureStore.js"],"names":["ADD_PRODUCT_TO_CATALOGUE","ADD_PRODUCT_TO_CART","ADD_PRODUCT_TO_FAVOURITES","DELETE_PRODUCT_FROM_CART","DELETE_PRODUCT_FROM_FAVOURITES","DELETE_ALL_PRODUCTS","ShowProducts","_this","this","react_default","a","createElement","props","listProducts","map","product","index","key","unit","onClick","addProductToCart","addProductToFavs","deleteAllProducts","Component","connect","state","listCatalogue","dispatch","cartProduct","type","favouriteProduct","deleteProducts","AddProducts","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","prod","_addToCatalogue","bind","assertThisInitialized","handleChangeInput","event","value","trim","preventDefault","addProductToCatalogue","setState","target","className","onSubmit","htmlFor","onChange","React","catalogueProduct","Catalogue","components_ShowProducts","components_AddProducts","Cart","unique","self","indexOf","find_product_by_id","id","listCart","find","element","_this2","listCartID","ident","listCartIDUnique","filter","elem","length","deteleProductFromCart","Favourites","listFav","listFavID","listFavIDUnique","deteleProductFromFavs","listFavourites","App","components_Catalogue","components_Cart","components_Favourites","initialState","rootReducer","combineReducers","arguments","undefined","action","toConsumableArray","concat","checkedCart","productFilter","objectSpread","checkedProduct","splice","slice","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38a509ed.chunk.js","sourcesContent":["const ADD_PRODUCT_TO_CATALOGUE = 'ADD_PRODUCT_TO_CATALOGUE';\nconst ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\nconst ADD_PRODUCT_TO_FAVOURITES = 'ADD_PRODUCT_TO_FAVOURITES';\nconst DELETE_PRODUCT_FROM_CART = 'DELETE_PRODUCT_FROM_CART';\nconst DELETE_PRODUCT_FROM_FAVOURITES = 'DELETE_PRODUCT_FROM_FAVOURITES';\nconst DELETE_ALL_PRODUCTS = 'DELETE_ALL_PRODUCTS';\n\nexport {\n  ADD_PRODUCT_TO_CATALOGUE,\n  ADD_PRODUCT_TO_CART,\n  ADD_PRODUCT_TO_FAVOURITES,\n  DELETE_PRODUCT_FROM_CART,\n  DELETE_PRODUCT_FROM_FAVOURITES,\n  DELETE_ALL_PRODUCTS,\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  addProductToCart,\n  addProductToFavs,\n  deleteAllProducts\n} from \"../actions\";\n\nclass ShowProducts extends Component {\n  // _addToCart(event,product) {\n  //   event.preventDefault();\n  //   this.props.addProductToCart(product);\n  // }\n\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.props.listProducts.map((product, index) => {\n            return (\n              <li key={index}>\n                {product.unit}\n                <button onClick={() => this.props.addProductToCart(product)}>\n                  comprar\n                </button>\n                <button onClick={() => this.props.addProductToFavs(product)}>\n                  favoritear\n                </button>\n                <button onClick={() => this.props.deleteAllProducts(product)}>\n                  borrar todos\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\n//tenemos acceso a un props que se llama listProducts\n//el state nos lo devuelve el callback de mapStateToProps (es como el event de los addEventListener)\nfunction mapStateToProps(state) {\n  return {\n    //con state.listCatalogue.listProducts accedemos al estado global, luego tenemos que acceder al estado del reducer que deseeemos y despues a la clave del estado que queramos\n    listProducts: state.listCatalogue.listProducts\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addProductToCart: cartProduct => dispatch(addProductToCart(cartProduct)),\n    addProductToFavs: favouriteProduct =>\n      dispatch(addProductToFavs(favouriteProduct)),\n    deleteAllProducts: deleteProducts =>\n      dispatch(deleteAllProducts(deleteProducts))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowProducts);\n","import { \n    ADD_PRODUCT_TO_CATALOGUE ,\n    ADD_PRODUCT_TO_CART,\n    ADD_PRODUCT_TO_FAVOURITES,\n    DELETE_PRODUCT_FROM_CART,\n    DELETE_PRODUCT_FROM_FAVOURITES,\n    DELETE_ALL_PRODUCTS,\n} from \"./constants\";\n\nexport function addProductToCatalogue(catalogueProduct) {\n  return {\n    type: ADD_PRODUCT_TO_CATALOGUE,\n    catalogueProduct,\n  };\n}\n\nexport function addProductToCart(cartProduct) {\n  return {\n    type: ADD_PRODUCT_TO_CART,\n    cartProduct,\n  };\n}\n\nexport function addProductToFavs(favouriteProduct) {\n  return {\n    type: ADD_PRODUCT_TO_FAVOURITES,\n    favouriteProduct,\n  };\n}\n\nexport function deteleProductFromCart(cartProduct) {\n  return {\n    type: DELETE_PRODUCT_FROM_CART,\n    cartProduct,\n  };\n}\n\nexport function deteleProductFromFavs(favouriteProduct) {\n  return {\n    type: DELETE_PRODUCT_FROM_FAVOURITES,\n    favouriteProduct,\n  };\n}\n\nexport function deleteAllProducts(deleteProducts) {\n  return {\n    type: DELETE_ALL_PRODUCTS,\n    deleteProducts,\n  };\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProductToCatalogue } from \"../actions\";\nimport \"../stylesheets/Form.css\";\n\nclass AddProducts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prod: \"\"\n    };\n\n    this._addToCatalogue = this._addToCatalogue.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    // this.handleFocusInput = this.handleFocusInput.bind(this);\n    // this.handlePressEnter = this.handlePressEnter.bind(this);\n  }\n\n  _addToCatalogue(event) {\n\n    let value = this.state.prod.trim();\n    event.preventDefault();\n    if (value !== \"\") {\n      this.props.addProductToCatalogue(value);\n      this.setState({\n        prod: \"\"\n      });\n    }\n  }\n\n  handleChangeInput(event) {\n    this.setState({\n      prod: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"form-container\" onSubmit={this._addToCatalogue}>\n          <label htmlFor=\"\">Introduce un articulo al catalogo</label>\n          <input\n            type=\"text\"\n            value={this.state.prod}\n            onChange={this.handleChangeInput}\n          />\n          <button type=\"submit\">Añadir Producto!</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addProductToCatalogue: catalogueProduct =>\n      dispatch(addProductToCatalogue(catalogueProduct))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddProducts);\n","import React, { Component } from \"react\";\nimport ShowProducts from './ShowProducts';\nimport AddProducts from './AddProducts';\nimport '../stylesheets/Catalogue.css';\n\nclass Catalogue extends Component {\n  render() {\n    return (\n      <div className=\"container-list\">\n        <h3>Catalogue</h3>\n        <div className=\"subcontainer-list\">\n          <ShowProducts/>\n          <AddProducts/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Catalogue;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { deteleProductFromCart } from \"../actions\";\nimport \"../stylesheets/Cart.css\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unique = this.unique.bind(this);\n    this.find_product_by_id = this.find_product_by_id.bind(this);\n  }\n\n  unique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  };\n\n  find_product_by_id = id => {\n    var elementWithID = this.props.listCart.find(function(element) {\n      return element.id === id;\n    });\n    return elementWithID;\n  };\n\n  render() {\n    const listCartID = this.props.listCart.map((ident) => {\n      return ident.id;\n    });\n\n    const listCartIDUnique = listCartID.filter(this.unique);\n\n    return (\n      <div className=\"container-list\">\n        <h3>Cart</h3>\n        <div>\n          <ul>\n            {listCartIDUnique.map((id, index) => {\n              return (\n                <li key={index}>\n                  <p>\n                    {this.find_product_by_id(id).unit}\n                  </p>\n                  <div>\n                    {\n                      listCartID.filter(elem => {\n                        return elem === id;\n                      }).length\n                    }\n                  </div>\n                  <button\n                    className=\"\"\n                    onClick={() =>\n                      this.props.deteleProductFromCart(this.find_product_by_id(id))\n                    }\n                  >\n                    borrar\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    listCart: state.listCart.listCart\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deteleProductFromCart: cartProduct =>\n      dispatch(deteleProductFromCart(cartProduct))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { deteleProductFromFavs } from \"../actions\";\n\nclass Favourites extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unique = this.unique.bind(this);\n    this.find_product_by_id = this.find_product_by_id.bind(this);\n  }\n\n  unique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  };\n\n  find_product_by_id = id => {\n    var elementWithID = this.props.listFav.find(function(element) {\n      return element.id === id;\n    });\n    return elementWithID;\n  };\n\n  render() {\n    const listFavID = this.props.listFav.map(ident => {\n      return ident.id;\n    });\n\n    const listFavIDUnique = listFavID.filter(this.unique);\n\n    return (\n      <div className=\"container-list\">\n        <h3>Favourites</h3>\n\n        <ul>\n          {listFavIDUnique.map((id, index) => {\n            return (\n              <li key={index}>\n                <p>{this.find_product_by_id(id).unit}</p>\n                <div>\n                  {\n                    listFavID.filter(elem => {\n                      return elem === id;\n                    }).length\n                  }\n                </div>\n                <button\n                  onClick={() =>\n                    this.props.deteleProductFromFavs(\n                      this.find_product_by_id(id)\n                    )\n                  }\n                >\n                  borrar\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    listFav: state.listFavourites.listFav\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deteleProductFromFavs: favouriteProduct =>\n      dispatch(deteleProductFromFavs(favouriteProduct))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Favourites);\n","import React, { Component } from 'react';\n// import logo from '../logo.svg';\nimport '../App.css';\nimport Catalogue from './Catalogue';\nimport Cart from './Cart';\nimport Favourites from './Favourites';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container-market\">\n        <header>\n          <h1>\n            Fundete la tarjeta\n          </h1>\n        </header>\n        <div className=\"subcontainer-market\">\n          <Catalogue/>\n          <Cart/>\n          <Favourites/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { \n  ADD_PRODUCT_TO_CATALOGUE,\n  DELETE_ALL_PRODUCTS,\n} from \"../constants\";\n\nconst initialState = {\n  listProducts: []\n  // name: '',\n  // avatar: '',\n};\n\n// El método Object.assign() se utiliza para copiar los valores de todas la propiedades enumerables de uno o más objetos fuente a un objeto destino. Retorna el objeto destino.\n// Sintaxis\n// Object.assign(objetivo, ...fuentes)\n//Es equivalente a spread operators\n\nexport default function contentReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PRODUCT_TO_CATALOGUE:\n      // Con la opcion de spread:\n      return {\n        // Con la opcion de spread:\n        listProducts: [\n          ...state.listProducts,\n          {\n            unit: action.catalogueProduct,\n            id: state.listProducts.length + 1\n          }\n        ]\n      };\n    // Con la opcion de concat:\n    // ...state,\n    // listProducts : state.listProducts.concat(\n    // [\n    //   {\n    //     unit: action.catalogueProduct,\n    //     id: state.listProducts.length + 1\n    //   }\n    // ])\n\n    // return Object.assign({}, state, {\n    //   listProducts: state.listProducts.concat([action.product]),\n    //   name: action.name,\n    //   avatar: action.avatar,\n    // });\n\n    case DELETE_ALL_PRODUCTS:\n      let checkedCart = state.listProducts.filter(productFilter => {\n        return productFilter.id !== action.deleteProducts.id;\n      });\n\n      return {\n        ...state,\n        listProducts: checkedCart\n      };\n\n    default:\n      return state;\n  }\n}\n","import { \n  ADD_PRODUCT_TO_CART, \n  DELETE_PRODUCT_FROM_CART, \n  DELETE_ALL_PRODUCTS \n} from \"../constants\";\n\nconst initialState = {\n  listCart: []\n};\n\nexport default function contentReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PRODUCT_TO_CART:\n      return {\n        ...state,\n        listCart: state.listCart.concat([action.cartProduct])\n      };\n\n    // return {\n    //   // Con la opcion de spread:\n    //   listCart: [\n    //     ...state.listCart,\n    //     {\n    //       unit: action.cartProduct,\n    //       id: state.listCart.length + 1,\n    //       counter: state.counter + 1,\n    //     }\n    //   ]\n    // };\n\n    case DELETE_PRODUCT_FROM_CART:\n      let checkedProduct = state.listCart.find(productFilter => {\n        return productFilter.id === action.cartProduct.id;\n      });\n\n      let index = state.listCart.indexOf(checkedProduct);\n\n      state.listCart.splice(index, 1);\n\n      // console.log(\"checkedProduct\", checkedProduct);\n      // console.log(\"index\", index);\n      // console.log(\"state.listCart\", state.listCart);\n\n      return {\n        ...state,\n        listCart: [\n          ...state.listCart.slice(0, index),\n          ...state.listCart.slice(index)\n        ]\n      };\n\n\n      case DELETE_ALL_PRODUCTS:\n      let checkedCart = state.listCart.filter(productFilter => {\n        return productFilter.id !== action.deleteProducts.id;\n      });\n      // console.log(\"checkedCart\", checkedCart);\n\n      return {\n        ...state,\n        listCart: checkedCart,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_PRODUCT_TO_FAVOURITES,\n  DELETE_PRODUCT_FROM_FAVOURITES,\n  DELETE_ALL_PRODUCTS,\n} from \"../constants\";\n\nconst initialState = {\n  listFav: []\n};\n\nexport default function contentReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PRODUCT_TO_FAVOURITES:\n      return {\n        ...state,\n        listFav: state.listFav.concat([action.favouriteProduct])\n      };\n\n    case DELETE_PRODUCT_FROM_FAVOURITES:\n      let checkedProduct = state.listFav.find(productFilter => {\n        return productFilter.id === action.favouriteProduct.id;\n      });\n\n      let index = state.listFav.indexOf(checkedProduct);\n\n      let spliceado = state.listFav.splice(index, 1);\n\n      // console.log(\"checkedProduct\", checkedProduct);\n      // console.log(\"index\", index);\n      // console.log(\"spliceado\", spliceado);\n      // console.log(\"state.listFav\", state.listFav);\n\n      return {\n        ...state,\n        listFav: [\n          ...state.listFav.slice(0, index),\n          ...state.listFav.slice(index)\n        ]\n      };\n\n    case DELETE_ALL_PRODUCTS:\n      let checkedCart = state.listFav.filter(productFilter => {\n        return productFilter.id !== action.deleteProducts.id;\n      });\n      // console.log(\"checkedCart\", checkedCart);\n\n      return {\n        ...state,\n        listFav: checkedCart\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport listCatalogue from './listCatalogue';\nimport listCart from './listCart';\nimport listFavourites from './listFavourites';\n\n//genera el store general\nconst rootReducer = combineReducers({\n  listCatalogue,\n  listCart,\n  listFavourites,\n})\n\nexport default rootReducer\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './components/App';\nimport configureStore from './configureStore'\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/root';\n\nimport thunk from 'redux-thunk';\n\nexport default function configureStore() {\n  let store = createStore(rootReducer,\n    applyMiddleware(thunk))\n  return store\n}"],"sourceRoot":""}